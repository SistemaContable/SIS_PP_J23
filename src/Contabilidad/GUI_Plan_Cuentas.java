/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Contabilidad;

import Clases_Auxiliares.Conexion;
import Interface.GUI_Principal;
import Objetos.Cuenta;
import Objetos.Usuario;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Enumeration;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Manolo
 */
public class GUI_Plan_Cuentas extends javax.swing.JInternalFrame {

    /**
     * Creates new form GUI_A_Prod
     */
    private Vector<Cuenta> vecChildren = new Vector<Cuenta>();
    private int cant_count=0;
    private DefaultTreeModel modelo1 = null;
    private DefaultMutableTreeNode root1 = null;
    private DefaultMutableTreeNode parent1 = null;
    private DefaultMutableTreeNode childnode = null;
    
    private Conexion r_con;
    private Usuario usr;
    private String nameTable = "plan_cuentas";
    private String operacion = "";
    private Cuenta ctaAyuda=null;
    
    public GUI_Plan_Cuentas(Usuario u, Conexion con) {
        usr = u;
        r_con=con;     
        initComponents();
        verPanelOperacion(false);
        bloquearCampos(false);
        cargarArbol();  
    }

    public void setCtaAyuda(Cuenta ctaAyuda) {
        this.ctaAyuda = ctaAyuda;
    }
    
 

    
    private void actualizarArbol(){        
        
        vecChildren = new Vector<Cuenta>();
        cant_count=0;
        modelo1=null;
        root1 = null;
        parent1 = null;
        childnode = null; 
        
        this.JTreeConta.setModel(modelo1);
        cargarArbol(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField5 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTreeConta = new javax.swing.JTree();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestión Plan de Cuentas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/articulo.png"))); // NOI18N
        setInheritsPopupMenu(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestión del Plan de Cuentas:");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/check.png"))); // NOI18N
        jButton3.setText("Salir");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Título");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Cuenta");

        jTextField5.setToolTipText("");

        jTextField1.setToolTipText("");

        jTextField2.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Nombre Cta.:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Tipo de Cta.:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("Código Plan Cta.:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Número de Cta.:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Información de la Cuenta:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton2)
                        .addGap(34, 34, 34))
                    .addComponent(jTextField1)
                    .addComponent(jTextField5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        JTreeConta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTreeContaMouseClicked(evt);
            }
        });
        JTreeConta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTreeContaKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(JTreeConta);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        jPanel4.setPreferredSize(new java.awt.Dimension(370, 166));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Operación de Cuenta:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setText("Nuevo Código:");

        jTextField3.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("Nombre Cta.:");

        jTextField4.setToolTipText("");
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField4FocusLost(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cancelar.png"))); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        jButton6.setText("Aceptar");
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText(" ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(47, 47, 47)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton6))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        jButton2.setText("Alta");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/eliminar.png"))); // NOI18N
        jButton4.setText("Baja");
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/modificar.png"))); // NOI18N
        jButton5.setText("Modificar");
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel11.setText("F1");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel12.setText("F2");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel13.setText("F3");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/modificar.png"))); // NOI18N
        jButton7.setText("Listado");
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/arbol.png"))); // NOI18N
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                        .addGap(8, 8, 8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JTreeConta.setEnabled(true);
        limpiarForm(); 
        habilitarOperaciones(true);
        jRadioButton1.setEnabled(true);
        jRadioButton2.setEnabled(true);
        mensajeError(" ");
        verPanelOperacion(false);
        this.operacion="";
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JTreeContaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTreeContaMouseClicked
        
        DefaultMutableTreeNode  node = (DefaultMutableTreeNode) JTreeConta.getLastSelectedPathComponent();

        if (node == null){
            return;
        }
        else{
            if (this.operacion!="MODIFICAR"){
                if (JTreeConta.isEnabled()){
                    mensajeError(" ");
                }
                Object nodeInfo = node.getUserObject();
                Cuenta loadcuenta = (Cuenta) nodeInfo;
                this.jTextField5.setText(""+loadcuenta.getNumero_C());
                this.jTextField1.setText(loadcuenta.getNombre_C());
                this.jTextField2.setText(loadcuenta.getCodigo_PC());
                if(loadcuenta.isImputable_C())
                    jRadioButton2.setSelected(true);
                else
                    jRadioButton1.setSelected(true);
            }
            else{
                mensajeError(" ");
                Object nodeInfo = node.getUserObject();
                Cuenta loadcuenta = (Cuenta) nodeInfo;
                //VERIFICAR DE ACA SI ES IMPUTABLE O NO
                if (!loadcuenta.isImputable_C()){
                    jButton6.setEnabled(true);
                    
                    if (this.hayLugarEnPlan(loadcuenta.getNumero_C(),loadcuenta.getCodigo_PC())){
                        jTextField3.setText(this.codigoPlanDisponible(loadcuenta.getNumero_C(),loadcuenta.getCodigo_PC()));
                    }
                    else{
                        jButton6.setEnabled(false);
                        mensajeError("La Cuenta que seleccionó ya alcanzó su limite (9 ó 99).");
                    }                     
                }
                else{
                    jButton6.setEnabled(false);
                    mensajeError("Para MODIFICAR una CUENTA debe SELECCIONAR un TÍTULO");
                }
            }
        }
        
        //si hace doble click es como dar de alta
        if((evt.getClickCount()==2)&&(JTreeConta.isEnabled())){
            altaCuenta ();
        }
      
    }//GEN-LAST:event_JTreeContaMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        altaCuenta();                      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        r_con.cierraConexion();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusLost
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
    }//GEN-LAST:event_jTextField4FocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.bajaCuenta();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.modificarCuenta();        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (this.operacion=="ALTA"){
            if(!jTextField4.getText().equals("")){
                if((jRadioButton1.isSelected())||(jRadioButton2.isSelected())){
                    if (!existeCuenta(jTextField4.getText())){
                        try {
                            mensajeError(" ");
                            r_con.Connection();
                            ResultSet rs = r_con.Consultar("select max(pc_nro_cuenta) from "+nameTable);
                            rs.next();                

                            int padre = Integer.parseInt(jTextField5.getText());
                            int num_cuenta = rs.getInt(1)+1;
                            String cod_plan = jTextField3.getText();
                            String leyenda = jTextField4.getText();

                            int imputable = 0;                    
                            if(jRadioButton1.isSelected())imputable = 1;

                            String nuevaCuenta = "'"+cod_plan+"',"+num_cuenta+",'"+leyenda+"',"+imputable+","+padre;
                            r_con.Insertar("insert into "+nameTable+" values("+nuevaCuenta+")");
                            JOptionPane.showMessageDialog(null,"Cuenta agregada correctamente.");
                            limpiarForm();

                            JTreeConta.setEnabled(true);
                            verPanelOperacion(false);
                            habilitarOperaciones(true);

                            r_con.cierraConexion(); 

                            actualizarArbol();                

                        } catch (SQLException ex) {
                            r_con.cierraConexion();
                            Logger.getLogger(GUI_Plan_Cuentas.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }  
                    else{
                        mensajeError("Ya existe una Cuenta con el nombre ingresado.");
                        jTextField4.requestFocus();
                    }
                }
                else{
                    mensajeError("Seleccione si o si el tipo de Cuenta.");
                }
            }
            else{
                 mensajeError("Complete el nombre de la Cuenta.");
                 jTextField4.requestFocus();
            }
        }
        else{
            if (this.operacion=="BAJA"){
                if(!jTextField4.getText().equals("")){
                    if (jTextField4.getText().equals(jTextField1.getText())){
                        mensajeError(" ");
                        r_con.Connection();
                        r_con.Borrar("DELETE FROM "+nameTable+" WHERE pc_nro_cuenta = "+jTextField5.getText());
                        //JOptionPane.showMessageDialog(null,"Cuenta eliminada correctamente.");
                        limpiarForm();

                        JTreeConta.setEnabled(true);
                        verPanelOperacion(false);
                        habilitarOperaciones(true);

                        r_con.cierraConexion(); 
                        actualizarArbol(); 
                    }
                    else{
                        mensajeError("Los nombres de las Cuentas no coinciden.");
                        jTextField4.requestFocus();
                    }
                }
                else{
                    mensajeError("Por seguridad ingrese el nombre de la Cuenta a eliminar.");
                    jTextField4.requestFocus();
                }
            }
            else{
                if (this.operacion=="MODIFICAR"){
                    if(!jTextField4.getText().equals("")){
                        //si tenia hijos y es solo el titulo
                        if (jTextField3.getText().equals("-")){
                            r_con.Connection();
                            String sql =  "UPDATE "+nameTable+" SET "
                                                +" pc_nombre_cuenta = '"+jTextField4.getText()
                                                +"' WHERE pc_nro_cuenta = "+jTextField5.getText()+";";
                            
                            r_con.Actualizar(sql);                           
                            r_con.cierraConexion();
                            this.operacion="";
                            limpiarForm();
                            mensajeError(" ");
                            JTreeConta.setEnabled(true);
                            verPanelOperacion(false);
                            habilitarOperaciones(true);
                            jRadioButton1.setEnabled(true);
                            jRadioButton2.setEnabled(true);
                            actualizarArbol();
                             
                        }
                        else{
                            DefaultMutableTreeNode  node = (DefaultMutableTreeNode) JTreeConta.getLastSelectedPathComponent();
                            Object nodeInfo = node.getUserObject();
                            Cuenta loadcuenta = (Cuenta) nodeInfo;
                            r_con.Connection();
                            
                            String message="Se va a modificar la Cuenta "+jTextField1.getText()+" con Codigo de Plan: "+jTextField2.getText() +"\n"
                                    + "a la Cuenta "+loadcuenta.getNombre_C()+" con el nuevo nombre: "+jTextField4.getText()+" y Codigo de Plan: "+jTextField3.getText();
                            
                            int rta=JOptionPane.showConfirmDialog(null, message, "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                            
                            if (rta==JOptionPane.YES_OPTION){
                                String sql =  "UPDATE "+nameTable+" SET "
                                                +" pc_codigo_plan_cuenta = '"+jTextField3.getText()+"', "
                                                +" pc_nombre_cuenta = '"+jTextField4.getText()+"', "
                                                +" pc_id_padre = "+loadcuenta.getNumero_C()
                                                +" WHERE pc_nro_cuenta = "+jTextField5.getText()+";";
                            
                                r_con.Actualizar(sql);
                                this.operacion="";
                                limpiarForm();
                                mensajeError(" ");
                                JTreeConta.setEnabled(true);
                                verPanelOperacion(false);
                                habilitarOperaciones(true);
                                actualizarArbol();
                            } 
                            r_con.cierraConexion();
                        }                       
                    }
                    else{
                        mensajeError("Complete el nombre de la Cuenta.");
                        jTextField4.requestFocus();
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        GUI_Imprimir_PC np = new GUI_Imprimir_PC(usr,r_con);       
        //lo centro respecto a x
        int x = (this.getDesktopPane().getWidth() / 2) - np.getWidth() / 2;
        int y = (this.getDesktopPane().getHeight() / 2) - np.getHeight() / 2;
        np.setLocation(x, y);        
        //lo hago visible, lo agrego al DesktopPanel, hago foco.
        np.setVisible(true);
        this.getDesktopPane().add(np);
        try {                
            np.setSelected(true);            
         } 
        catch (PropertyVetoException ex) {
            Logger.getLogger(GUI_Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        np.moveToFront();
        np.requestFocus();
        
    }//GEN-LAST:event_jButton7ActionPerformed

    /*
    * Eventos de Teclado sobre el Árbol
    */
    private void JTreeContaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTreeContaKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_F1){
             altaCuenta();
         }
         if (evt.getKeyCode() == KeyEvent.VK_F2){
             bajaCuenta();
         }
         if (evt.getKeyCode() == KeyEvent.VK_F3){
             modificarCuenta();
         }
    }//GEN-LAST:event_JTreeContaKeyPressed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        this.expandirArbol();
    }//GEN-LAST:event_jButton8ActionPerformed
   
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree JTreeConta;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables


    /**
     * Metodo que carga los hijos de las cuentas inicializadas, Activo, Pasivo, etc
     */
    public void cargarArbol() {
        //inicializo el arbol
        inicializarArbol();
        
        //cargo las cuentas hijo
        r_con.Connection();
        int count = 0;
        int aux = 0;
        Enumeration e = root1.breadthFirstEnumeration();
        while (e.hasMoreElements()) {
            parent1 = (DefaultMutableTreeNode) e.nextElement();
            if (count > aux) {
                try {
                    Cuenta objChildren = (Cuenta) parent1.getUserObject();
                    ResultSet res = r_con.Consultar("select pc_codigo_plan_cuenta,pc_nro_cuenta,pc_nombre_cuenta,pc_imputable,pc_id_padre from plan_cuentas where pc_id_padre="+objChildren.getNumero_C()+" order by pc_codigo_plan_cuenta");
                    while (res.next()) {
                        Cuenta hijo = new Cuenta (res.getString(1), res.getInt(2), res.getString(3),res.getBoolean(4),res.getInt(5));
                        childnode = new DefaultMutableTreeNode(hijo);
                        modelo1.insertNodeInto(childnode, parent1, parent1.getChildCount());                        
                    }
                    res.close();
                } catch (SQLException ex) {
                    r_con.cierraConexion();
                    Logger.getLogger(GUI_Plan_Cuentas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            //Pregunto si llego al fin.
            if (e.hasMoreElements() == false) {
                int toEle = totalElementos(root1.breadthFirstEnumeration());
                if (cant_count < toEle) {
                    aux = count;
		    count = -1;                    
                    e = root1.breadthFirstEnumeration();
                    cant_count = toEle;
                } else {
                    break;
                }
            }
            count++;
        }
        //System.out.println(cant_count);
        this.JTreeConta.setModel(modelo1);
        r_con.cierraConexion();
    }

   
    /**
     * Metodo PRIVADO de cargarArbol que inicializa el Arbol con las primeras cuentas, Activo, Pasivo, etc
     */
    private void inicializarArbol() {
        //pido el objeto -1 por que es el Plan de Cuentas
        Cuenta obj = (Cuenta) getHijos(-1).get(0);
        root1 = new DefaultMutableTreeNode(obj);
        modelo1 = new DefaultTreeModel(root1);
        Enumeration e = root1.breadthFirstEnumeration();
        parent1 = (DefaultMutableTreeNode) e.nextElement();
        Cuenta objChildren = (Cuenta) parent1.getUserObject();
        
        //consigo los hijos de idparent
        vecChildren = getHijos(objChildren.getNumero_C());

        for (int k = 0; k < vecChildren.size(); k++) {
            cant_count++;
            Cuenta hijo;
            hijo = (Cuenta) vecChildren.get(k);
            modelo1.insertNodeInto(new DefaultMutableTreeNode(hijo), parent1, parent1.getChildCount());
        }
        this.JTreeConta.setModel(modelo1);
    }

   public int totalElementos(Enumeration e) {
        int cont = 0;
        while (e.hasMoreElements()) {
            e.nextElement();
            cont++;
        }
        return cont;
    }

    /**
     * Return un vector con los hijos.
     * Id,Idparent,Descripcion,Order
     * @param Id
     * @return
     */
    public Vector getHijos (int Id) {
        r_con.Connection();
        Vector<Cuenta> data = new Vector<Cuenta>();
        try {            
            ResultSet res = r_con.Consultar("select pc_codigo_plan_cuenta,pc_nro_cuenta,pc_nombre_cuenta,pc_imputable,pc_id_padre from "+nameTable+" where pc_id_padre="+Id+" order by pc_codigo_plan_cuenta");

            while (res.next()) {
                data.addElement(new Cuenta(res.getString(1), res.getInt(2), res.getString(3),res.getBoolean(4),res.getInt(5)));
            }
            res.close();
        } catch (SQLException e) {
            r_con.cierraConexion();
            System.out.println(e);            
        }
        r_con.cierraConexion();
        return data;
    }
    
    /**
    * Cuenta la cantidad de Hijos que tiene una cuenta, su proposito es brindar
    * la proxima enumeracion del hijo y/o saber si el padre tiene hijos cuando cantidad es 0
    * @param Idparent
    * @return
    */
    public int getCantidadHijos(int Id) {
        r_con.Connection();
        int numhijos = 0;
        try {
            ResultSet res = r_con.Consultar("Select (count(1)) from "+nameTable+" where pc_id_padre=" + Id);
            res.next();
            numhijos = res.getInt(1);
            res.close();
        } catch (SQLException e) {
            r_con.cierraConexion();
            System.out.println(e);
        }
        r_con.cierraConexion();
        return numhijos;
    }   
    
    public void expandirArbol (){
        int j=JTreeConta.getRowCount();
        int i=0;
        while( i < j) {
            JTreeConta.expandRow(i);
            i += 1;
            j = JTreeConta.getRowCount();
      }
    }
    
    public void setTitleLabel (String t){
        this.jLabel1.setText(t);
    }

    public void limpiarForm(){
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
    }
    
    /*
    * Metodo que bloquea los campos que no se pueden editar del plan de cuenta
    */
    private void bloquearCampos (boolean b){
        jTextField5.setEditable(b);
        jTextField1.setEditable(b);
        jTextField2.setEditable(b);
        jTextField3.setEditable(b);
    }
    
    /*
    * Muestro u oculta el formulario de carga de Nueva Cuenta
    */
    private void verPanelOperacion (boolean b){
        jLabel9.setEnabled(b);
        jLabel7.setEnabled(b);
        jLabel8.setEnabled(b);
        jTextField3.setEnabled(b);
        jTextField4.setEnabled(b);
        jButton1.setEnabled(b);
        jButton6.setEnabled(b);  
        if (!b){            
            jLabel9.setText("Operación de Cuenta:");
        }
    }
    
    private void limpiarPanelOperacion (){
        jTextField3.setText("");
        jTextField4.setText("");
    }
    
    /*
    * Habilita y Deshabilita las operaciones con las cuentas: Alta, Baja, etc
    */
    private void habilitarOperaciones (boolean b){        
            jButton2.setEnabled(b);
            jButton4.setEnabled(b);
            jButton5.setEnabled(b);
            jButton7.setEnabled(b);
    }
    
    private void mensajeError (String m){
        jLabel10.setText(m);
    }
     
    public boolean existeCuenta (String nombre){
        boolean esta = false;
        try {
            r_con.Connection();
            ResultSet rsl;
            rsl = r_con.Consultar("SELECT COUNT(*) FROM "+nameTable+" WHERE pc_nombre_cuenta = '"+nombre+"';");
            rsl.next();
            int existe = Integer.parseInt(rsl.getString(1));
            rsl.close();
            if (existe > 0){
                esta = true;
            }
        } catch (SQLException ex) {
            r_con.cierraConexion();
            Logger.getLogger(GUI_Plan_Cuentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        r_con.cierraConexion();
        return esta;
    }
    
    private boolean eligioCuenta () {
        boolean eligio = true;        
        if ((jTextField5.getText().length()==0) && (jTextField1.getText().length()==0) && (jTextField2.getText().length()==0)){
            eligio = false;
        }
        return eligio;
    }
    
    public String codigoPlanDisponible (int id_padre, String codigo_plan_padre){
        
        String codigo_hijo = codigo_plan_padre;
        
        Vector<Cuenta> Hijos = getHijos(id_padre);
        
        String nuevo_codigo="";
        boolean termine = false;
        int i = 1;
        
        while ((i <= Hijos.size()+1)&&(!termine)){
            //caso Titulo Raiz, Activo, etc
            if ((codigo_plan_padre.length()==1) && (codigo_plan_padre.equals("0"))){
                nuevo_codigo="";
            }
            else{
                //caso hijo de Activo, etc
                if (codigo_plan_padre.length()==1){
                    nuevo_codigo=codigo_plan_padre+".";
                }
                else{
                    //caso de hijo en que ya son .01, .02. etc
                    if ((codigo_plan_padre.length()>1)&&(i<=9)){
                        nuevo_codigo=codigo_plan_padre+".0";
                    }
                    else{
                        //caso de hijo en que ya son .11, .12. etc
                        nuevo_codigo=codigo_plan_padre+".";
                    }
                }
            }
            
            nuevo_codigo = nuevo_codigo+Integer.toString(i);
            
            if (i <= Hijos.size()){
                Cuenta hijo = (Cuenta) Hijos.get(i-1);
                if (!hijo.getCodigo_PC().equals(nuevo_codigo)){
                    termine = true;
                }
            }
            else{
                //llegue al maximo, quiere decir que el nuevo codigo toma k
                termine=true;
            }           
            i++;          
        
        }        
        return nuevo_codigo;       
    }
    
   public boolean hayLugarEnPlan (int id_padre, String codigo_plan_padre){
       boolean haylugar = false; 
       try {
            r_con.Connection();
            ResultSet rs = r_con.Consultar("select COUNT(*) from "+nameTable+" where pc_id_padre="+id_padre);
            rs.next();
            int futuroHijo = rs.getInt(1);
            futuroHijo++;
            
            if ((codigo_plan_padre.length()==1) && (codigo_plan_padre.equals("0"))){
                haylugar = futuroHijo<=9;
            }
            else{
                //caso hijo de Activo, etc
                if (codigo_plan_padre.length()==1){
                    haylugar = futuroHijo<=9;
                }
                else{
                    //caso de hijo en que ya son 1.1, 1.2. etc
                    if ((codigo_plan_padre.length()>=1)&&((codigo_plan_padre.length()<3))){
                        haylugar = futuroHijo<=9;
                    }
                    else{
                        //caso de hijo en que ya son .11, .12. etc
                        haylugar = futuroHijo<=99;
                    }
                }
            }
            r_con.cierraConexion();   
        } catch (SQLException ex) {
            r_con.cierraConexion(); 
            Logger.getLogger(GUI_Plan_Cuentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        return haylugar;
   } 
        
    private void altaCuenta (){
        DefaultMutableTreeNode  node = (DefaultMutableTreeNode) JTreeConta.getLastSelectedPathComponent();
        Cuenta loadcuenta = null;
        if (node == null){
            mensajeError("Primero debe seleccionar una Cuenta.");
        }
        else{
            Object nodeInfo = node.getUserObject();
            loadcuenta = (Cuenta) nodeInfo;
        }
        
        boolean eligio = eligioCuenta();
        
        if ((eligio)&&((loadcuenta!=null)&&(!loadcuenta.isImputable_C()))){
           
            habilitarOperaciones(false);
            limpiarPanelOperacion ();
            verPanelOperacion(true);
            mensajeError(" ");
            jLabel9.setText("Alta de nueva Cuenta:");
            this.operacion = "ALTA";

            node = (DefaultMutableTreeNode) JTreeConta.getLastSelectedPathComponent();

            if (node != null) //Nothing is selected.
            {
                jTextField4.requestFocus();                
                int id_padre = Integer.parseInt(jTextField5.getText());
                String plan_padre = jTextField2.getText();
                
                if (this.hayLugarEnPlan(id_padre, plan_padre)){
                    JTreeConta.setEnabled(false);
                    jTextField3.setText(this.codigoPlanDisponible(id_padre,plan_padre));
                }
                else{
                    habilitarOperaciones(true);
                    limpiarPanelOperacion ();
                    verPanelOperacion(false);
                    mensajeError("Se llegó al límite de la Cuenta (9 ó 99), rediseñe su Plan de Cta.");
                }              
            }
        }
        else{
            if (!eligio){
                mensajeError("Primero debe seleccionar una Cuenta.");
            }
            else{
                mensajeError("Para AGREGAR una CUENTA debe SELECCIONAR un TÍTULO");
            }
        }
    }
    
    private void bajaCuenta(){
        DefaultMutableTreeNode  node = (DefaultMutableTreeNode) JTreeConta.getLastSelectedPathComponent();
        Cuenta loadcuenta;
        int cantidad_hijos = -1;
        
        if (node == null){
            mensajeError("Primero debe seleccionar una Cuenta.");
        }
        else{
            Object nodeInfo = node.getUserObject();
            loadcuenta = (Cuenta) nodeInfo;
            cantidad_hijos = this.getCantidadHijos(loadcuenta.getNumero_C());
        }
        
        boolean eligio = eligioCuenta();
        
        if ((eligio)&&(cantidad_hijos == 0)){        
            habilitarOperaciones(false);
            limpiarPanelOperacion ();
            verPanelOperacion(true);
            mensajeError("Por seguridad ingrese el nombre de la Cuenta a eliminar.");
            jLabel9.setText("Baja de Cuenta:");
            this.operacion="BAJA";
            jTextField3.setText("-");
            JTreeConta.setEnabled(false);
            jTextField4.requestFocus();            
        }
        else{
            if (!eligio){
                mensajeError("Primero debe seleccionar una Cuenta.");
            }
            else{
                mensajeError("La Cuenta que intenta Eliminar contiene Cuentas.");
            }
        }
    }
    
    private void modificarCuenta (){
        DefaultMutableTreeNode  node = (DefaultMutableTreeNode) JTreeConta.getLastSelectedPathComponent();
        Cuenta loadcuenta;
        int cantidad_hijos = -1;
        
        jRadioButton1.setEnabled(false);
        jRadioButton2.setEnabled(false);
        
        if (node == null){
            mensajeError("Primero debe seleccionar una Cuenta.");
        }
        else{
            Object nodeInfo = node.getUserObject();
            loadcuenta = (Cuenta) nodeInfo;
            cantidad_hijos = this.getCantidadHijos(loadcuenta.getNumero_C());
            
        }
        
        boolean eligio = eligioCuenta();
        
        if ((eligio)&&(cantidad_hijos == 0)){        
            habilitarOperaciones(false);
            limpiarPanelOperacion ();
            verPanelOperacion(true);
            jButton6.setEnabled(false);
            mensajeError("Seleccione ahora a la cuenta donde desea mover, y un el título.");
            jLabel9.setText("Modificar una Cuenta:");
            this.operacion="MODIFICAR";
            jTextField4.setText(jTextField1.getText());
            //jTextField3.setText("-");
            //JTreeConta.setEnabled(false);
            jTextField4.requestFocus();            
        }
        else{
            if (!eligio){
                mensajeError("Primero debe seleccionar una Cuenta.");
            }
            else{
                habilitarOperaciones(false);
                limpiarPanelOperacion ();
                verPanelOperacion(true);
                jLabel9.setText("Modificar una Cuenta:");
                this.operacion="MODIFICAR";
                jTextField3.setText("-");
                JTreeConta.setEnabled(false);
                jTextField4.requestFocus();
                mensajeError("Sólo podrá modificar el nombre porque la Cuenta contiene Cuentas.");
            }
        }
    }
}
