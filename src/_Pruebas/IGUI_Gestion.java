/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package _Pruebas;

import Clases_Auxiliares.Conexion;
import Clases_Auxiliares.Validaciones;
import Clases_Auxiliares.Fechas;
import Objetos.Cuenta;
import java.awt.Color;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JMenuItem;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Manolo
 */
public class IGUI_Gestion extends javax.swing.JInternalFrame {

    //variables de referencias a librerias Auxiliares
    private Conexion r_con = new Conexion(); 
    private final Validaciones validar = new Validaciones();
    private final Fechas fecha = new Fechas ();
    
    
    //nombre de la Tabla del SGBD
    private String name_tabla = "Tasas_IVA";
    //nombre de las columnas de la Tabla a mostrar en la Ayuda
    private String[] colum_names = {"tasa_clave","tasa_desc","tasa_sigla"};
    //nombres reales de los Indices de la Tabla
    private String[] indices_tabla = {"PK_Tasa_IVA","IX_Descripcion"};  
    
    
    //nombres de los campos de la JTabla (formales a mostrar en la ayuda) 
    private String[] colum_names_tabla = {"Codigo Tasa","Descripcion","Sigla"};    
    
   
    //nombres formales de los Indices de la Tabla (a mostrar en el menu ordenamiento)
    private String[] name_indicesTabla = {"por Codigo de Tasa IVA","por Descripcion"};
    //posicion que ocupa el valor indicesTabla en el colum_names_tabla (para saber que buscar)
    private int[] relacion_indices_conTabla = {0,1};
    
    //modo ordenamiento elegido inicial por defecto (cambiar manualmente)
    private int numero_ordenamiento_elegido = 0; //(corresponde al numero de indicesTabla)
    private String modo_ordenamiento_elegido = indices_tabla[numero_ordenamiento_elegido];
    
    //fila actual posicionado en la tabla
    private int fila_registro;    
    //cuanta buscada
    private int buscada;
    
    
    
    public IGUI_Gestion(Conexion r) {
        initComponents();
        restringirCampos();
        r_con = r; 
        
        modoConsulta();
        cargarOrdenamientos ();
        detectarOrden ();
        ocultar_Msj();
        aviso_de_baja(" ");
        
        //**selecciono el primer registro y cargo los campos
        tabla.setRowSelectionInterval(0,0); 
        //cargar_ValoresPorFila(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo_recorrido = new javax.swing.ButtonGroup();
        panel_ayuda = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        panel_datos = new javax.swing.JPanel();
        field_cta_nro = new javax.swing.JTextField();
        field_fec_alta = new javax.swing.JFormattedTextField();
        field_suspenciones = new javax.swing.JTextField();
        field_limite_cred = new javax.swing.JTextField();
        field_dni = new javax.swing.JTextField();
        field_nombre = new javax.swing.JTextField();
        field_apellido = new javax.swing.JTextField();
        field_telefono = new javax.swing.JTextField();
        field_direccion = new javax.swing.JTextField();
        field_sueldo = new javax.swing.JTextField();
        field_fec_cbo_est = new javax.swing.JFormattedTextField();
        field_nro_tjt = new javax.swing.JTextField();
        btn_aceptar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        lab_tit_orden = new javax.swing.JLabel();
        lab_orden = new javax.swing.JLabel();
        lab_tit_modo = new javax.swing.JLabel();
        lab_modo = new javax.swing.JLabel();
        lab_cta_nro = new javax.swing.JLabel();
        lab_fec_alta = new javax.swing.JLabel();
        lab_tipo = new javax.swing.JLabel();
        lab_estado = new javax.swing.JLabel();
        lab_tjt_nro = new javax.swing.JLabel();
        lab_mensaje = new javax.swing.JLabel();
        lab_suspenciones = new javax.swing.JLabel();
        lab_limite_cred = new javax.swing.JLabel();
        lab_fec_cbo_estado = new javax.swing.JLabel();
        lab_dni = new javax.swing.JLabel();
        lab_nombre = new javax.swing.JLabel();
        lab_apellido = new javax.swing.JLabel();
        lab_telefono = new javax.swing.JLabel();
        lab_direccion = new javax.swing.JLabel();
        lab_sueldo = new javax.swing.JLabel();
        lab_aviso_de_baja = new javax.swing.JLabel();
        combo_tipo = new javax.swing.JComboBox();
        combo_estado = new javax.swing.JComboBox();
        panel_desplazamiento = new javax.swing.JPanel();
        btn_primero = new javax.swing.JButton();
        btn_anterior = new javax.swing.JButton();
        btn_proximo = new javax.swing.JButton();
        btn_ultimo = new javax.swing.JButton();
        field_buscar = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();
        lab_buscar = new javax.swing.JLabel();
        menu_interno = new javax.swing.JMenuBar();
        menu_alta = new javax.swing.JMenu();
        menu_baja = new javax.swing.JMenu();
        menu_mod = new javax.swing.JMenu();
        menu_recorrido = new javax.swing.JMenu();
        menu_salir = new javax.swing.JMenu();

        setMaximizable(true);
        setTitle("Gesti√≥n Cuentas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cuentas.png"))); // NOI18N

        panel_ayuda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout panel_ayudaLayout = new javax.swing.GroupLayout(panel_ayuda);
        panel_ayuda.setLayout(panel_ayudaLayout);
        panel_ayudaLayout.setHorizontalGroup(
            panel_ayudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_ayudaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panel_ayudaLayout.setVerticalGroup(
            panel_ayudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_ayudaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addContainerGap())
        );

        panel_datos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panel_datos.setFocusCycleRoot(true);

        field_cta_nro.setEditable(false);
        field_cta_nro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_cta_nroFocusLost(evt);
            }
        });
        field_cta_nro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_cta_nroKeyTyped(evt);
            }
        });

        try {
            field_fec_alta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        field_fec_alta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_fec_altaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_fec_altaFocusLost(evt);
            }
        });

        field_suspenciones.setEditable(false);

        field_limite_cred.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_limite_credKeyTyped(evt);
            }
        });

        field_dni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_dniKeyTyped(evt);
            }
        });

        field_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_telefonoKeyTyped(evt);
            }
        });

        field_sueldo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_sueldoKeyTyped(evt);
            }
        });

        try {
            field_fec_cbo_est.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        field_fec_cbo_est.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_fec_cbo_estFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_fec_cbo_estFocusLost(evt);
            }
        });

        field_nro_tjt.setEditable(false);

        btn_aceptar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        btn_aceptar.setText("ACEPTAR");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        btn_cancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cancelar.png"))); // NOI18N
        btn_cancelar.setText("CANCELAR");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        lab_tit_orden.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab_tit_orden.setForeground(new java.awt.Color(51, 153, 0));
        lab_tit_orden.setText("ORDEN:");

        lab_orden.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lab_orden.setText("Tipo");

        lab_tit_modo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab_tit_modo.setForeground(new java.awt.Color(204, 0, 0));
        lab_tit_modo.setText("MODO:");

        lab_modo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lab_modo.setText("Tipo");

        lab_cta_nro.setText("Cta. Nro:");

        lab_fec_alta.setText("Fecha Alta:");

        lab_tipo.setText("Tipo:");

        lab_estado.setText("Estado:");

        lab_tjt_nro.setText("Nro. Tjt:");

        lab_mensaje.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab_mensaje.setForeground(java.awt.Color.red);
        lab_mensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lab_mensaje.setText("mensaje");

        lab_suspenciones.setText("Susp.:");

        lab_limite_cred.setText("Limite Cred.:");

        lab_fec_cbo_estado.setText("Fecha Cbo Estado:");

        lab_dni.setText("Nro. DNI:");

        lab_nombre.setText("Nombre:");

        lab_apellido.setText("Apellido:");

        lab_telefono.setText("Direcci√≥n:");

        lab_direccion.setText("Tel√©fono:");

        lab_sueldo.setText("Sueldo:");

        lab_aviso_de_baja.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lab_aviso_de_baja.setForeground(new java.awt.Color(255, 0, 0));
        lab_aviso_de_baja.setText("Estado");

        combo_tipo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        combo_tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "C", "G" }));

        combo_estado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        combo_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "7", "A", "P" }));

        javax.swing.GroupLayout panel_datosLayout = new javax.swing.GroupLayout(panel_datos);
        panel_datos.setLayout(panel_datosLayout);
        panel_datosLayout.setHorizontalGroup(
            panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_datosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_datosLayout.createSequentialGroup()
                        .addComponent(lab_tit_orden)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab_orden)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lab_tit_modo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab_modo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_datosLayout.createSequentialGroup()
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lab_limite_cred)
                            .addComponent(lab_suspenciones)
                            .addComponent(lab_cta_nro)
                            .addComponent(lab_fec_alta)
                            .addComponent(lab_tipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field_fec_alta, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_cta_nro, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_limite_cred, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_suspenciones, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lab_apellido, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lab_nombre, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lab_dni, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lab_telefono, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lab_direccion, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(panel_datosLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lab_sueldo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(field_apellido)
                                    .addComponent(field_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(field_dni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(field_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_sueldo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_datosLayout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panel_datosLayout.createSequentialGroup()
                                        .addComponent(lab_estado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(90, 90, 90))
                                    .addGroup(panel_datosLayout.createSequentialGroup()
                                        .addComponent(lab_fec_cbo_estado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(field_fec_cbo_est, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(51, 51, 51))
                                    .addGroup(panel_datosLayout.createSequentialGroup()
                                        .addComponent(lab_tjt_nro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(field_nro_tjt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panel_datosLayout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(lab_aviso_de_baja, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addComponent(lab_mensaje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_datosLayout.createSequentialGroup()
                .addContainerGap(266, Short.MAX_VALUE)
                .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152)
                .addComponent(btn_cancelar)
                .addGap(262, 262, 262))
        );
        panel_datosLayout.setVerticalGroup(
            panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_datosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lab_tit_orden)
                    .addComponent(lab_orden)
                    .addComponent(lab_tit_modo)
                    .addComponent(lab_modo))
                .addGap(18, 18, 18)
                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_datosLayout.createSequentialGroup()
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_datosLayout.createSequentialGroup()
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(field_cta_nro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lab_cta_nro))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lab_fec_alta)
                                    .addComponent(field_fec_alta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lab_suspenciones)
                                    .addComponent(field_suspenciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panel_datosLayout.createSequentialGroup()
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lab_fec_cbo_estado)
                                    .addComponent(field_fec_cbo_est, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lab_estado)
                                    .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(field_nro_tjt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lab_tjt_nro))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lab_aviso_de_baja, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_datosLayout.createSequentialGroup()
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lab_limite_cred)
                                    .addComponent(field_limite_cred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(combo_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lab_tipo)))))
                    .addGroup(panel_datosLayout.createSequentialGroup()
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(field_dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lab_dni))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lab_nombre)
                            .addComponent(field_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lab_apellido)
                            .addComponent(field_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(field_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lab_direccion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(field_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lab_telefono))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(field_sueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lab_sueldo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lab_mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panel_desplazamiento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btn_primero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/arrow-circle-left-2x.png"))); // NOI18N
        btn_primero.setText("Primero");
        btn_primero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_primeroActionPerformed(evt);
            }
        });

        btn_anterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/arrow-left-2x.png"))); // NOI18N
        btn_anterior.setText("Anterior");
        btn_anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_anteriorActionPerformed(evt);
            }
        });

        btn_proximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/arrow-right-2x.png"))); // NOI18N
        btn_proximo.setText("Pr√≥ximo");
        btn_proximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_proximoActionPerformed(evt);
            }
        });

        btn_ultimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/arrow-circle-right-2x.png"))); // NOI18N
        btn_ultimo.setText("√öltimo");
        btn_ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ultimoActionPerformed(evt);
            }
        });

        field_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                field_buscarKeyPressed(evt);
            }
        });

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        lab_buscar.setText("Buscar:");

        javax.swing.GroupLayout panel_desplazamientoLayout = new javax.swing.GroupLayout(panel_desplazamiento);
        panel_desplazamiento.setLayout(panel_desplazamientoLayout);
        panel_desplazamientoLayout.setHorizontalGroup(
            panel_desplazamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_desplazamientoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btn_primero)
                .addGap(18, 18, 18)
                .addComponent(btn_anterior, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btn_proximo, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btn_ultimo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(lab_buscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        panel_desplazamientoLayout.setVerticalGroup(
            panel_desplazamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_desplazamientoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_desplazamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_primero)
                    .addComponent(field_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lab_buscar)
                    .addComponent(btn_anterior)
                    .addComponent(btn_proximo)
                    .addComponent(btn_ultimo)
                    .addComponent(btn_buscar))
                .addContainerGap())
        );

        menu_interno.setBorderPainted(false);

        menu_alta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/check-4x.png"))); // NOI18N
        menu_alta.setText(" ALTA             ");
        menu_alta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_altaMouseClicked(evt);
            }
        });
        menu_interno.add(menu_alta);

        menu_baja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/baja.png"))); // NOI18N
        menu_baja.setText(" BAJA             ");
        menu_baja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_bajaMouseClicked(evt);
            }
        });
        menu_interno.add(menu_baja);

        menu_mod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/reload-4x.png"))); // NOI18N
        menu_mod.setText(" MODIFICACI√ìN    ");
        menu_mod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_modMouseClicked(evt);
            }
        });
        menu_interno.add(menu_mod);

        menu_recorrido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/magnifying-glass-4x.png"))); // NOI18N
        menu_recorrido.setText(" ORDEN RECORRIDO ");
        menu_interno.add(menu_recorrido);

        menu_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/circle-x-4x.png"))); // NOI18N
        menu_salir.setText("SALIR           ");
        menu_salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_salirMouseClicked(evt);
            }
        });
        menu_interno.add(menu_salir);

        setJMenuBar(menu_interno);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_datos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_ayuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_desplazamiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel_desplazamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_ayuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        cargar_ValoresPorFila(tabla.rowAtPoint(evt.getPoint()));
        scrollCellToView(this.tabla,tabla.getSelectedRow(),1);        
    }//GEN-LAST:event_tablaMouseClicked
    
    private void menu_altaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_altaMouseClicked
        menuDisponible(false);
        lab_modo.setText("Alta");
        vaciarCampos();
        camposEditables(true);
        ayudaDisponible(false);
        btn_aceptar.setEnabled(true);
        btn_cancelar.setEnabled(true);
        field_fec_alta.setText(fecha.getHoy());
        field_fec_cbo_est.setText(fecha.getHoy());
        field_suspenciones.setText("0");
        field_fec_alta.requestFocus();  
        combo_estado.setSelectedItem("A");
        combo_estado.setEnabled(false);        
    }//GEN-LAST:event_menu_altaMouseClicked

    private void menu_bajaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_bajaMouseClicked
        menuDisponible(false);
        lab_modo.setText("Baja");
        camposEditables(false);
        field_cta_nro.setEditable(true);
        ayudaDisponible(false);
        btn_aceptar.setEnabled(true);
        btn_cancelar.setEnabled(true);
        field_cta_nro.requestFocus();  
    }//GEN-LAST:event_menu_bajaMouseClicked

    private void menu_modMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_modMouseClicked
        menuDisponible(false);
        lab_modo.setText("Modificaci√≥n");
        String cta = field_cta_nro.getText();
        camposEditables(true);
        field_cta_nro.setEditable(true);
        field_fec_alta.setEnabled(false);
        ayudaDisponible(false);
        btn_aceptar.setEnabled(true);
        btn_cancelar.setEnabled(true);
        field_cta_nro.requestFocus();  
    }//GEN-LAST:event_menu_modMouseClicked

    private void btn_primeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_primeroActionPerformed
        scrollToCenter(this.tabla,0,0);
        tabla.setRowSelectionInterval(0,0); 
        cargar_ValoresPorFila(0);
    }//GEN-LAST:event_btn_primeroActionPerformed

    private void btn_ultimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ultimoActionPerformed
        scrollToCenter(this.tabla,tabla.getRowCount(),tabla.getRowCount());
        tabla.setRowSelectionInterval(tabla.getRowCount()-1,tabla.getRowCount()-1); 
        cargar_ValoresPorFila(tabla.getRowCount()-1);
    }//GEN-LAST:event_btn_ultimoActionPerformed

    private void menu_salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_salirMouseClicked
        this.dispose();
    }//GEN-LAST:event_menu_salirMouseClicked

    private void btn_anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_anteriorActionPerformed
        if ((fila_registro-1 >= 0)&&(fila_registro-1 < tabla.getRowCount())){             
            tabla.setRowSelectionInterval(fila_registro-1,fila_registro-1);
            scrollCellToView(this.tabla,fila_registro-1,fila_registro-1); 
            cargar_ValoresPorFila(fila_registro-1);  
        }
    }//GEN-LAST:event_btn_anteriorActionPerformed

    private void btn_proximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_proximoActionPerformed
        if ((fila_registro+1 >= 0)&&(fila_registro+1 < tabla.getRowCount())){                      
            tabla.setRowSelectionInterval(fila_registro+1,fila_registro+1); 
            scrollCellToView(this.tabla,fila_registro+1,fila_registro+1);
            cargar_ValoresPorFila(fila_registro+1);   
        }
    }//GEN-LAST:event_btn_proximoActionPerformed

    public int buscarValor (String valor){
        return busquedaBinaria(valor.toUpperCase(),0,tabla.getRowCount()-1,relacion_indices_conTabla[numero_ordenamiento_elegido]); 
    } 

    private int busquedaBinaria(String elemento, int ini, int fin, int nro_campo_tabla){
        int posicion;
        int M = (int)(ini+fin)/2;

        //CB1
        if (elemento.equals((tabla.getValueAt(M,nro_campo_tabla).toString()).toUpperCase())){
            posicion = M;
        }
        else{
            //CB2
            if (ini >= fin){
                posicion = -1;
            }
            //CG
            else{
                if (compare(((tabla.getValueAt(M,nro_campo_tabla)).toString().toUpperCase()),elemento) < 0){
                    ini = M+1;
                    posicion = busquedaBinaria (elemento,ini,fin,nro_campo_tabla);
                }
                else{
                    fin = M-1;
                    posicion = busquedaBinaria (elemento,ini,fin,nro_campo_tabla);
                }            
            }
        }
        return(posicion);
    }
    
//*******************************************************************************************************
//Este algoritmo reemplaza al compareTo de Java, ya que mejora problemas como por ejemplo comparar
// cadenas y numeros, dado que 2.compareTo(10) devolvia 1, siendo que no es asi.
    private final boolean isDigit(char ch)
    {
        return ch >= 48 && ch <= 57;
    }

    /** Length of string is passed in for improved efficiency (only need to calculate it once) **/
    private final String getChunk(String s, int slength, int marker)
    {
        StringBuilder chunk = new StringBuilder();
        char c = s.charAt(marker);
        chunk.append(c);
        marker++;
        if (isDigit(c))
        {
            while (marker < slength)
            {
                c = s.charAt(marker);
                if (!isDigit(c))
                    break;
                chunk.append(c);
                marker++;
            }
        } else
        {
            while (marker < slength)
            {
                c = s.charAt(marker);
                if (isDigit(c))
                    break;
                chunk.append(c);
                marker++;
            }
        }
        return chunk.toString();
    }

    public int compare(String o1, String o2)
    {
        //if (!(o1 instanceof String) || !(o2 instanceof String))
        //{
            //return 0;
        //}
        String s1 = (String)o1;
        String s2 = (String)o2;

        int thisMarker = 0;
        int thatMarker = 0;
        int s1Length = s1.length();
        int s2Length = s2.length();

        while (thisMarker < s1Length && thatMarker < s2Length)
        {
            String thisChunk = getChunk(s1, s1Length, thisMarker);
            thisMarker += thisChunk.length();

            String thatChunk = getChunk(s2, s2Length, thatMarker);
            thatMarker += thatChunk.length();

            // If both chunks contain numeric characters, sort them numerically
            int result = 0;
            if (isDigit(thisChunk.charAt(0)) && isDigit(thatChunk.charAt(0)))
            {
                // Simple chunk comparison by length.
                int thisChunkLength = thisChunk.length();
                result = thisChunkLength - thatChunk.length();
                // If equal, the first different number counts
                if (result == 0)
                {
                    for (int i = 0; i < thisChunkLength; i++)
                    {
                        result = thisChunk.charAt(i) - thatChunk.charAt(i);
                        if (result != 0)
                        {
                            return result;
                        }
                    }
                }
            } else
            {
                result = thisChunk.compareTo(thatChunk);
            }

            if (result != 0)
                return result;
        }

        return s1Length - s2Length;
    }
//*******************************************************************************************************
    
    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        accion_Buscar();
    }//GEN-LAST:event_btn_buscarActionPerformed
    
    private void accion_Buscar(){
        int rta = buscarValor(field_buscar.getText());
        if (rta != -1){
            ocultar_Msj();
            scrollCellToView(this.tabla,rta,rta);           
            tabla.setRowSelectionInterval(rta,rta);
        }
        else{
            field_buscar.requestFocus();
            String campobuscado = colum_names_tabla[relacion_indices_conTabla[numero_ordenamiento_elegido]];
            mostrar_Msj_Error("No se encontro '"+campobuscado+"' para el valor : "+field_buscar.getText());
        }  
    }
    
    private void field_fec_altaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_fec_altaFocusLost
        if (fecha.isFechaValida(field_fec_alta.getText())){
            ocultar_Msj();
        }
        else{
            mostrar_Msj_Error("La Fecha ingresada no se reconoce como valida.");
            field_fec_alta.requestFocus();
        }        
    }//GEN-LAST:event_field_fec_altaFocusLost

    private void field_fec_cbo_estFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_fec_cbo_estFocusGained
        field_fec_cbo_est.select(0,0); 
    }//GEN-LAST:event_field_fec_cbo_estFocusGained

    private void field_fec_cbo_estFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_fec_cbo_estFocusLost
        if (fecha.isFechaValida(field_fec_cbo_est.getText())){
            ocultar_Msj();
        }
        else{
            mostrar_Msj_Error("La Fecha ingresada no se reconoce como valida.");
            field_fec_cbo_est.requestFocus();
        }  
    }//GEN-LAST:event_field_fec_cbo_estFocusLost

    private void field_fec_altaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_fec_altaFocusGained
        field_fec_alta.select(0,0); 
    }//GEN-LAST:event_field_fec_altaFocusGained

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
       if (btn_cancelar.getText().equals("SALIR")){
            btn_cancelar.setText("CANCELAR");
            updateTabla();
        }
        
        ocultar_Msj();
        menuDisponible(true); 
        String ultima = field_cta_nro.getText();
        modoConsulta();
        if (ultima.equals("")){
            cargar_ValoresPorFila(this.fila_registro);
        }
        else{
            Cuenta cta = new Cuenta ();
            //cta.setCta_Nro(Integer.parseInt(ultima));
            posicionarAyuda(cta);
        }
        
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
        if (lab_modo.getText().equals("Alta")){
            if (camposCompletos()){
                ocultar_Msj();
                insertarCta();
                camposEditables(false);                
                mostrar_Msj_Exito("Cuenta registrada en el sistema.");
                btn_aceptar.setEnabled(false);
                btn_cancelar.setText("SALIR");
            }
            else{
                mostrar_Msj_Error("Por favor, complete todos los campos solicitados");
            }
        }
        else{
            if (lab_modo.getText().equals("Baja")){
                if(!existeCta(Integer.parseInt(field_cta_nro.getText()))){
                    mostrar_Msj_Error("Ingrese una cuenta que se encuentre registrada en el sistema");
                    field_cta_nro.requestFocus();
                }
                else{
                    if (!cuentaEliminada(Integer.parseInt(field_cta_nro.getText()))){
                        ocultar_Msj();
                        eliminarCta();
                        field_cta_nro.setEditable(false);
                        camposEditables(false);
                        mostrar_Msj_Exito("Cuenta eliminada del sistema.");
                        btn_aceptar.setEnabled(false);
                        btn_cancelar.setText("SALIR");
                    }
                    else{
                        mostrar_Msj_Error("La cuenta que intenta eliminar, se encuentra en pedido de baja");
                        field_cta_nro.requestFocus();
                    }
                }
            }
            else{
                if (lab_modo.getText().equals("Modificaci√≥n")){
                    if(!existeCta(Integer.parseInt(field_cta_nro.getText()))){
                        mostrar_Msj_Error("Ingrese una cuenta que se encuentre registrada en el sistema");
                        field_cta_nro.requestFocus();
                    }
                    else{
                        if (!cuentaEliminada(Integer.parseInt(field_cta_nro.getText()))){
                            ocultar_Msj();
                            modificarCta();
                            field_cta_nro.setEditable(false);
                            camposEditables(false);
                            mostrar_Msj_Exito("Cuenta modificada correctamente.");
                            btn_aceptar.setEnabled(false);
                            btn_cancelar.setText("SALIR");
                        }
                        else{
                            mostrar_Msj_Error("La cuenta que intenta modificar, ya se encuentra en pedido de baja");
                            field_cta_nro.requestFocus();
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void field_dniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_dniKeyTyped
        onlyNum(evt);
    }//GEN-LAST:event_field_dniKeyTyped

    private void field_telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_telefonoKeyTyped
        onlyNum(evt);
    }//GEN-LAST:event_field_telefonoKeyTyped

    private void field_sueldoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_sueldoKeyTyped
        onlyNum(evt);
    }//GEN-LAST:event_field_sueldoKeyTyped

    private void field_limite_credKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_limite_credKeyTyped
        onlyNum(evt);
    }//GEN-LAST:event_field_limite_credKeyTyped

    private void field_cta_nroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_cta_nroFocusLost
        if (lab_modo.getText().equals("Baja") || (lab_modo.getText().equals("Modificaci√≥n"))){
            if (!field_cta_nro.getText().equals("")){
                if(existeCta(Integer.parseInt(field_cta_nro.getText()))){
                    ocultar_Msj();
                    cargar_ValoresPorCta(Integer.parseInt(field_cta_nro.getText()));                    
                    if ((lab_modo.getText().equals("Baja"))){
                        btn_aceptar.requestFocus();
                    }
                }
                else{
                    mostrar_Msj_Error("Ingrese una cuenta que se encuentre registrada en el sistema");
                    field_cta_nro.requestFocus();                    
                }
            } 
            else{
                mostrar_Msj_Error("El numero de cuenta no puede ser vacio");
                field_cta_nro.requestFocus();
            }
        }
    }//GEN-LAST:event_field_cta_nroFocusLost

    private void field_cta_nroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_cta_nroKeyTyped
        onlyNum(evt);
    }//GEN-LAST:event_field_cta_nroKeyTyped

    private void field_buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_buscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            accion_Buscar();            
        }
    }//GEN-LAST:event_field_buscarKeyPressed
    
    private void cargarOrdenamientos () {         
        ButtonGroup grupo_recorridos;
        grupo_recorridos = new javax.swing.ButtonGroup();
        for (int i = 0; i < indices_tabla.length; i++) {            
            JCheckBoxMenuItem item = new javax.swing.JCheckBoxMenuItem(name_indicesTabla[i],new javax.swing.ImageIcon(getClass().getResource("/Iconos/item.png")));
            item.addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                    detectarOrden ();
                }
            });
            grupo_recorridos.add(item);
            menu_recorrido.add(item);
            if (i==numero_ordenamiento_elegido){
                item.setSelected(true);
            }
        } 
    }
    
    /**
     * el metodo detecta que orden fue seleccionado entre los valores de "orden de recorrido"
     */
    private void detectarOrden (){        
        int i = 0;
        boolean detecte = false;
        
        while ((!detecte)&&(i < this.menu_recorrido.getItemCount())) {            
            if(this.menu_recorrido.getItem(i).isSelected()){
                JMenuItem item = menu_recorrido.getItem(i);
                numero_ordenamiento_elegido = i;
                modo_ordenamiento_elegido = item.getText();
                lab_orden.setText(menu_recorrido.getItem(i).getText());
            }
            i++;
        }
        //** cambiado el orden, actualizo los valores de la tabla respecto al orden
        updateTabla();
    }    
    
    /**
     * metodo que vuelca los valores de una CTA al panel de datos
     * @param cta indica una numero de CTA
     */
    private void cargar_Campos (int cta){
        try{    
            this.vaciarCampos();
            r_con.Connection();
            PreparedStatement pstm = r_con.getConn().prepareStatement(
                        "SELECT *" +
                        "FROM Cuentas "+
                        "WHERE Cta_Nro = "+cta);

            ResultSet res = pstm.executeQuery();
                
            while(res.next()){
                field_cta_nro.setText(res.getString("Cta_Nro"));
                field_fec_alta.setText(fecha.convertirBarras(res.getString("Cta_fecha_alta")));
                field_suspenciones.setText(res.getString("Cta_cant_suspenciones"));
                field_limite_cred.setText(res.getString("Cta_limite_credito"));
                   
                String tipo = res.getString("Cta_Tipo_id");

                combo_tipo.setSelectedItem(tipo);
                   
                field_dni.setText(res.getString("Cta_Cli_DNI"));
                field_nombre.setText(res.getString("Cta_Cli_Nombre"));
                field_apellido.setText(res.getString("Cta_Cli_Apellido"));
                field_direccion.setText(res.getString("Cta_Cli_Direccion"));
                field_telefono.setText(res.getString("Cta_Cli_Telefono"));
                field_sueldo.setText(res.getString("Cta_Cli_Sueldo"));
                   
                field_fec_cbo_est.setText(fecha.convertirBarras(res.getString("Cta_ult_cambio_estado")));
                String estado = res.getString("Cta_Estado_id");
                   
                combo_estado.setSelectedItem(estado);
                   
                if (estado.equals("5")){
                    aviso_de_baja("Inactiva (Suspendida)");
                }
                else{
                    if (estado.equals("7")){
                        aviso_de_baja("Inactiva (Definitivamente)");
                    }
                    else{
                        if (estado.equals("P")){
                            aviso_de_baja("Pendiente de Baja");
                        }
                        else{
                            aviso_de_baja(" ");
                        }
                    }
                }                   
                field_nro_tjt.setText(res.getString("Cta_Tarj_id"));

            }
            res.close();
        } catch(SQLException e){
            System.out.println(e);
        } finally {            
            r_con.cierraConexion();
        }           
    }
    
    /**
     * metodo que vuelca los valores de una Cta al panel de datos
     * @param cta numero de cta
    */
    private void cargar_ValoresPorCta (int cta){
        cargar_Campos(cta);
    }    
    
    /**
     * metodo que vuelca los valores de la tabla de ayuda a los registros del panel de datos
     * @param fila indica una fila valida dentro de la tabla, gestiona la posicion fila_registro
     */
    private void cargar_ValoresPorFila (int fila){
        if ((fila >= 0)&&(fila < tabla.getRowCount())){
            fila_registro=fila;
            String cta = String.valueOf(tabla.getValueAt(fila, 0));
            cargar_Campos(Integer.parseInt(cta));
        }
    }
    
    /**
     * realiza una consulta a la tabla Cuentas de la BD y la vuelca a la jTable
     */
    private void updateTabla(){ 
                      
        //** pido los datos a la tabla  
        Object[][] vcta = this.getDatos();
               
        //** se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel();                        
        tabla.setModel(datos);         
        datos = new DefaultTableModel(vcta,colum_names_tabla);                        
        tabla.setModel(datos); 
        
        //ajustamos tama√±o de la celda Fecha Alta
        /*TableColumn columna = tabla.getColumn("Fecha Alta");        
        columna.setPreferredWidth(100);
        columna.setMinWidth(100);
        columna.setMaxWidth(100);*/
        
        if (!field_cta_nro.getText().equals("")){
            Cuenta cta_actual = new Cuenta(); 
            //cta_actual.setCta_Nro(Integer.parseInt(field_cta_nro.getText()));
            posicionarAyuda(cta_actual);
        }  
    }
    
    /**
     * posiciona la ayuda, cargando los datos de la cuenta al panel de datos y centrando la tabla
     * al valor selecionado 
     * @param cta numero de la cta seleccionada (clickeada, etc)
     */
    private void posicionarAyuda(Cuenta cta) {
        int i = 0;
        boolean encontre = false;
        
        while ((!encontre)&&(i<tabla.getRowCount())) {            
            if (Integer.parseInt(String.valueOf(tabla.getValueAt(i, 0)))==1){
                encontre=true;
            }
            i++;
        }
        
        if (encontre){
            cargar_ValoresPorFila(i-1);
            scrollCellToView(this.tabla,i-1,1);
            tabla.setRowSelectionInterval(i-1, i-1);
        }
    }
    
    /**
     * metodo que maneja el modelo de una jTable para centrar el scroll al medio
     * @param table la jTable a centrar
     * @param rowIndex numero de la fila a centrar al medio
     * @param vColIndex valor por defecto = 1, es para obtener el Rectangle de la jTable
     */
    private static void scrollToCenter(JTable table, int rowIndex, int vColIndex) {
        if (!(table.getParent() instanceof JViewport)) {
          return;
        }
        JViewport viewport = (JViewport) table.getParent();
        Rectangle rect = table.getCellRect(rowIndex, vColIndex, true);
        Rectangle viewRect = viewport.getViewRect();
        rect.setLocation(rect.x - viewRect.x, rect.y - viewRect.y);

        int centerX = (viewRect.width - rect.width); // / 2;
        int centerY = (viewRect.height - rect.height); // / 2;
        if (rect.x < centerX) {
          centerX = -centerX;
        }
        if (rect.y < centerY) {
          centerY = -centerY;
        }
        rect.translate(centerX, centerY);
        viewport.scrollRectToVisible(rect);
    }
    
    /**
     * metodo que maneja el modelo de una jTable para que sea visible al usuario
     * @param table la jTable a hacer visivle
     * @param rowIndex numero de la fila actual
     * @param vColIndex valor por defecto = 1, es para obtener el Rectangle de la jTable
     */
    public void scrollCellToView(JTable table, int rowIndex, int vColIndex) {
        if (!(table.getParent() instanceof JViewport)) {
            return;
        }
        JViewport viewport = (JViewport) table.getParent();
        Rectangle rect = table.getCellRect(rowIndex, vColIndex, true);
        Rectangle viewRect = viewport.getViewRect();

        int x = viewRect.x;
        int y = viewRect.y;

        if (rect.x >= viewRect.x && rect.x <= (viewRect.x + viewRect.width - rect.width)){

        } else if (rect.x < viewRect.x){
            x = rect.x;
        } else if (rect.x > (viewRect.x + viewRect.width - rect.width)) {
            x = rect.x - viewRect.width + rect.width;
        }

        if (rect.y >= viewRect.y && rect.y <= (viewRect.y + viewRect.height - rect.height)){

        } else if (rect.y < viewRect.y){
            y = rect.y;
        } else if (rect.y > (viewRect.y + viewRect.height - rect.height)){
            y = rect.y - viewRect.height + rect.height;
        }

        viewport.setViewPosition(new Point(x,y));
    }
    
    /**
     * devuelve la cantidad actual de cuentas en la Base de Datos
     * @return valor entero de la cantidad de cuentas
     */
    private int getCantidad_Cuentas (){
        int registros = 0;
        //obtenemos la cantidad de registros existentes en la tabla
        try{         
           r_con.Connection();           
           PreparedStatement pstm = r_con.getConn().prepareStatement("SELECT count(1) as total FROM "+name_tabla);
           ResultSet res = pstm.executeQuery();
           res.next();
           registros = res.getInt("total");
           res.close();
        } catch(SQLException e){
            System.out.println(e);
        } finally {            
            r_con.cierraConexion();
        }
        
        return registros;
    }
    
    /**
     * obtiene todos los datos de la tabla Cuentas y los carga a una matriz de objetos
     * @return retorna una matriz de objetos, cuya finalidad es setearla directamente
     *         al modelo de la jTable
     */
    public Object [][] getDatos(){                 
        Object[][] data = new String[getCantidad_Cuentas ()][colum_names.length];  
        //realizamos la consulta sql y llenamos los datos en "Object"
        try{    
            if (colum_names.length>=0){
                r_con.Connection();

                String campos = colum_names[0];
                for (int i = 1; i < colum_names.length; i++) {
                    campos+=",";
                    campos+=colum_names[i];
                }

                String consulta = ("SELECT "+campos+" "+
                                   "FROM "+name_tabla+" WITH (INDEX("+indices_tabla[numero_ordenamiento_elegido]+"))");
                System.out.println(consulta);
                PreparedStatement pstm = r_con.getConn().prepareStatement(consulta);

                ResultSet res = pstm.executeQuery();
                int i = 0;
                while(res.next()){
                    for (int j = 0; j < colum_names.length; j++) {  
                        data[i][j] = res.getString(j+1);
                    }     
                    i++;
                }
                res.close();
            }
        } catch(SQLException e){
            System.out.println(e);
        } finally {            
            r_con.cierraConexion();
        }
        return data;
    }
    
    /*
    * consulta utilizada para saber si hay alguna Cuenta que coincida con ese nro de cuenta
    */
    private boolean existeCta (int nro){
        boolean existe = false;
        try {
            r_con.Connection();
            PreparedStatement pstm = r_con.getConn().prepareStatement(
                    "SELECT *"+
                    "FROM Cuentas "+
                    "WHERE Cta_Nro = "+nro);
            
            ResultSet res = pstm.executeQuery();
            
            while(res.next()){
                existe = true;
            }
            res.close();
        } catch (SQLException ex) {
            Logger.getLogger(IGUI_Gestion.class.getName()).log(Level.SEVERE, null, ex);
        } finally {            
            r_con.cierraConexion();
        }
        return existe;
    }
    
    /*
    * consulta para saber si una cuenta se encuentra en pendiente de baja
    */
    private boolean cuentaEliminada (int nro){
        boolean eliminada = false;
        try {
            r_con.Connection();
            PreparedStatement pstm = r_con.getConn().prepareStatement(
                    "SELECT *"+
                    "FROM Cuentas "+
                    "WHERE Cta_Nro = "+nro);
            
            ResultSet res = pstm.executeQuery();
            
            while(res.next()){
                String estado = res.getString("Cta_Estado_id");
  
                if (estado.equals("P")){
                    eliminada = true;
                }                   
            }
            res.close();
        } catch (SQLException ex) {
            Logger.getLogger(IGUI_Gestion.class.getName()).log(Level.SEVERE, null, ex);
        } finally {            
            r_con.cierraConexion();
        }
        return eliminada;
    }
    
    private void insertarCta(){             
        try {
            r_con.Connection();
            
            //calculo los valores nuevos de la Cta y la Tjt
            ResultSet rsl = r_con.Consultar("SELECT * FROM Parametros_del_Sistema");
            if (rsl.next()){
                long nro_cta =  Long.parseLong(rsl.getString(1))+1;
                long nro_tjt =  Long.parseLong(rsl.getString(2))+1;
                field_cta_nro.setText(""+nro_cta);                
                field_nro_tjt.setText(""+nro_tjt);
            }
            
            //primero inserto la tarjeta
            String parametros = field_nro_tjt.getText()+",'"+fecha.getHoy()+"','"+"A"+"',"+field_nro_tjt.getText();
            r_con.Insertar("INSERT INTO Tarjetas VALUES ("+parametros+")");
            
            //luego inserto la cuenta
            parametros=field_cta_nro.getText()+",'"+field_fec_alta.getText()+"',"+field_suspenciones.getText()+","+
                    field_limite_cred.getText()+",'"+field_fec_cbo_est.getText()+"',"+
                    field_dni.getText()+",'"+field_nombre.getText()+"','"+field_apellido.getText()+"','"+
                    field_direccion.getText()+"',"+null+",'"+field_telefono.getText()+"',"+field_sueldo.getText()+",'"+
                    combo_tipo.getSelectedItem()+"','"+combo_estado.getSelectedItem()+"',"+null+","+field_nro_tjt.getText();
            
            
            r_con.Insertar("INSERT INTO Cuentas VALUES ("+parametros+")");
            
            //luego actualizo los parametros ultimos
            String sql =  "UPDATE Parametros_del_Sistema SET "
                    + "ps_ult_nro_cta = "+field_cta_nro.getText()+", "
                    + "ps_ult_nro_tjt = "+field_nro_tjt.getText()+";";
            
            r_con.ActualizarSinCartel(sql);
            rsl.close();
        } catch (SQLException ex) {
            Logger.getLogger(IGUI_Gestion.class.getName()).log(Level.SEVERE, null, ex);
        } finally {            
            r_con.cierraConexion();
        }
    }
    
    private void eliminarCta(){
        r_con.Connection();            
        //luego elimino logicamente la cuenta
        r_con.ActualizarSinCartel("UPDATE Cuentas SET "
                    + "Cta_Estado_id = 'P',"
                    + "Cta_ult_cambio_estado = '"+fecha.getHoy()+"'"
                    + "WHERE Cta_Nro = "+field_cta_nro.getText());
        
        r_con.cierraConexion();
    }
    
    private void modificarCta(){
        r_con.Connection();            
        
        // Controlo los campos Numericos : Cta_Nro,Cta_cant_suspenciones,Cta_limite_credito,Cta_Cli_DNI,Cta_Cli_Sueldo
        
        String cta_nro = field_cta_nro.getText();
        String limite_cred = field_limite_cred.getText();
        String dni = field_dni.getText();
        String sueldo = field_sueldo.getText();
        
        if (cta_nro.equals("")){cta_nro=null;}
        if (limite_cred.equals("")){limite_cred=null;}
        if (dni.equals("")){dni=null;}
        if (sueldo.equals("")){sueldo=null;}
        
        r_con.ActualizarSinCartel("UPDATE Cuentas SET "
                + "Cta_Nro = "+cta_nro+", "
                + "Cta_limite_credito = "+limite_cred+", "
                + "Cta_Tipo_id = '"+combo_tipo.getSelectedItem()+"', "
                + "Cta_Cli_DNI = "+dni+", "
                + "Cta_Cli_Nombre = '"+field_nombre.getText()+"', "
                + "Cta_Cli_Apellido = '"+field_apellido.getText()+"', "
                + "Cta_Cli_Direccion = '"+field_direccion.getText()+"', "
                + "Cta_Cli_Telefono = '"+field_telefono.getText()+"', "
                + "Cta_Cli_Sueldo = "+sueldo+", "
                + "Cta_ult_cambio_estado = '"+field_fec_cbo_est.getText()+"',"
                + "Cta_Estado_id = '"+combo_estado.getSelectedItem()+"' "
                + "WHERE Cta_Nro ="+field_cta_nro.getText());
        r_con.cierraConexion();
    }
    
    private void modoConsulta (){
        lab_modo.setText("Consulta");
        btn_aceptar.setEnabled(false);
        btn_cancelar.setEnabled(false);       
        
        field_nro_tjt.setEditable(false);
        field_cta_nro.setEditable(false);
        camposEditables(false); 
        ayudaDisponible(true);
    }
    
    
    private void camposEditables (boolean condicion){
        field_fec_alta.setEnabled(condicion);
        field_limite_cred.setEditable(condicion);  
        combo_tipo.setEnabled(condicion);
        field_dni.setEditable(condicion);
        field_nombre.setEditable(condicion);
        field_apellido.setEditable(condicion);
        field_telefono.setEditable(condicion);
        field_direccion.setEditable(condicion);
        field_sueldo.setEditable(condicion);
        field_fec_cbo_est.setEnabled(condicion);        
        combo_estado.setEnabled(condicion);
    }
    
    private void ayudaDisponible(boolean condicion){
        btn_primero.setEnabled(condicion);
        btn_anterior.setEnabled(condicion);
        btn_proximo.setEnabled(condicion);
        btn_ultimo.setEnabled(condicion);
        field_buscar.setEnabled(condicion);
        btn_buscar.setEnabled(condicion);

        tabla.setVisible(condicion);
    }
    
    private void vaciarCampos(){        
        field_cta_nro.setText("");
        field_fec_alta.setText("");
        field_suspenciones.setText("");
        field_limite_cred.setText("");
        combo_tipo.setSelectedIndex(0);
        field_dni.setText("");
        field_nombre.setText("");
        field_apellido.setText("");
        field_telefono.setText("");
        field_direccion.setText("");
        field_sueldo.setText("");
        field_fec_cbo_est.setText("");
        combo_estado.setSelectedIndex(0);
        field_nro_tjt.setText("");
    }
    
    private boolean camposCompletos (){
        if((!field_fec_alta.getText().equals(""))&&
           (!field_limite_cred.getText().equals(""))&&
           (!field_dni.getText().equals(""))&&
           (!field_nombre.getText().equals(""))&&
           (!field_apellido.getText().equals(""))&&
           (!field_telefono.getText().equals(""))&&
           (!field_direccion.getText().equals(""))&&
           (!field_sueldo.getText().equals(""))&&
           (!field_fec_cbo_est.getText().equals(""))
          ){
            return true;
        }
        else{
            return false;
        }
    }
    
    private void menuDisponible (boolean disponible){
        menu_alta.setEnabled(disponible);
        menu_baja.setEnabled(disponible);
        menu_mod.setEnabled(disponible);
        menu_recorrido.setEnabled(disponible);
        menu_salir.setEnabled(disponible);

    }
    
    private void ocultar_Msj(){
        this.lab_mensaje.setText(" ");
    }
    
    private void mostrar_Msj_Exito(String texto) {
        this.lab_mensaje.setText(texto);
        this.lab_mensaje.setForeground(new java.awt.Color(0, 153, 51));
    }
    
    private void mostrar_Msj_Error(String texto) {
        this.lab_mensaje.setText(texto);
        this.lab_mensaje.setForeground(Color.RED);
    }
    
    private void aviso_de_baja (String aviso){
        lab_aviso_de_baja.setText(aviso);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_anterior;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_primero;
    private javax.swing.JButton btn_proximo;
    private javax.swing.JButton btn_ultimo;
    private javax.swing.JComboBox combo_estado;
    private javax.swing.JComboBox combo_tipo;
    private javax.swing.JTextField field_apellido;
    private javax.swing.JTextField field_buscar;
    private javax.swing.JTextField field_cta_nro;
    private javax.swing.JTextField field_direccion;
    private javax.swing.JTextField field_dni;
    private javax.swing.JFormattedTextField field_fec_alta;
    private javax.swing.JFormattedTextField field_fec_cbo_est;
    private javax.swing.JTextField field_limite_cred;
    private javax.swing.JTextField field_nombre;
    private javax.swing.JTextField field_nro_tjt;
    private javax.swing.JTextField field_sueldo;
    private javax.swing.JTextField field_suspenciones;
    private javax.swing.JTextField field_telefono;
    private javax.swing.ButtonGroup grupo_recorrido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lab_apellido;
    private javax.swing.JLabel lab_aviso_de_baja;
    private javax.swing.JLabel lab_buscar;
    private javax.swing.JLabel lab_cta_nro;
    private javax.swing.JLabel lab_direccion;
    private javax.swing.JLabel lab_dni;
    private javax.swing.JLabel lab_estado;
    private javax.swing.JLabel lab_fec_alta;
    private javax.swing.JLabel lab_fec_cbo_estado;
    private javax.swing.JLabel lab_limite_cred;
    private javax.swing.JLabel lab_mensaje;
    private javax.swing.JLabel lab_modo;
    private javax.swing.JLabel lab_nombre;
    private javax.swing.JLabel lab_orden;
    private javax.swing.JLabel lab_sueldo;
    private javax.swing.JLabel lab_suspenciones;
    private javax.swing.JLabel lab_telefono;
    private javax.swing.JLabel lab_tipo;
    private javax.swing.JLabel lab_tit_modo;
    private javax.swing.JLabel lab_tit_orden;
    private javax.swing.JLabel lab_tjt_nro;
    private javax.swing.JMenu menu_alta;
    private javax.swing.JMenu menu_baja;
    private javax.swing.JMenuBar menu_interno;
    private javax.swing.JMenu menu_mod;
    private javax.swing.JMenu menu_recorrido;
    private javax.swing.JMenu menu_salir;
    private javax.swing.JPanel panel_ayuda;
    private javax.swing.JPanel panel_datos;
    private javax.swing.JPanel panel_desplazamiento;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    private void restringirCampos() {        
        field_cta_nro.setNextFocusableComponent(field_fec_alta);
        field_fec_alta.setNextFocusableComponent(field_suspenciones);
        field_suspenciones.setNextFocusableComponent(field_limite_cred);
        field_limite_cred.setNextFocusableComponent(combo_tipo);
        combo_tipo.setNextFocusableComponent(field_dni);
        field_dni.setNextFocusableComponent(field_nombre);
        field_nombre.setNextFocusableComponent(field_apellido);
        field_apellido.setNextFocusableComponent(field_telefono);
        field_telefono.setNextFocusableComponent(field_direccion);
        field_direccion.setNextFocusableComponent(field_sueldo);
        field_sueldo.setNextFocusableComponent(field_fec_cbo_est);
        field_fec_cbo_est.setNextFocusableComponent(combo_estado);
        combo_estado.setNextFocusableComponent(field_nro_tjt);
        field_nro_tjt.setNextFocusableComponent(btn_aceptar);
    }
    
    /*
    * metodo para controlar que el evento Key Typed sea solo numero
    */
    public void onlyNum(KeyEvent ke) {         
        char caracter = ke.getKeyChar();
        if(((caracter < '0') || (caracter > '9'))){
            ke.consume(); 
        } 
    }    
}
